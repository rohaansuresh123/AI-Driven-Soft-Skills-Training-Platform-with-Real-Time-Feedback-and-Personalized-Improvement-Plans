<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Password Reset</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background: linear-gradient(to right, #43cea2, #185a9d); /* Pleasant gradient */
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }
        .reset-container {
            background: #ffffff;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
            width: 400px;
            text-align: center;
            position: relative;
        }
        h2 {
            margin-bottom: 20px;
            font-size: 24px;
            color: #185a9d; /* Text color */
        }
        .form-group {
            margin-bottom: 20px;
            text-align: left;
            position: relative;
        }
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }
        input[type="password"] {
            width: calc(100% - 20px);
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            outline: none;
        }
        .password-info {
            display: none;
            position: absolute;
            bottom: -100px;
            left: 0;
            background: #f9f9f9;
            border: 1px solid #ccc;
            border-radius: 4px;
            padding: 10px;
            width: 100%;
            font-size: 12px;
            z-index: 10;
        }
        .password-info p {
            margin: 5px 0;
            color: #333;
        }
        .password-info::before {
            content: "";
            position: absolute;
            top: -10px;
            left: 20px;
            border-width: 0 10px 10px 10px;
            border-style: solid;
            border-color: transparent transparent #f9f9f9 transparent;
        }
        .strength-bar {
            display: flex;
            height: 5px;
            margin-top: 5px;
        }
        .strength-bar div {
            flex: 1;
            margin: 0 2px;
            background: #ddd;
            border-radius: 2px;
            transition: background 0.3s;
        }
        .strength-1 { background: #e74c3c; } /* Weak */
        .strength-2 { background: #f39c12; } /* Medium */
        .strength-3 { background: #f1c40f; } /* Good */
        .strength-4 { background: #2ecc71; } /* Strong */
        .error {
            color: red;
            font-size: 12px;
        }
        button {
            width: 100%;
            padding: 10px;
            background: #43cea2;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
            transition: background 0.3s;
        }
        button:hover {
            background: #185a9d;
        }
        .genai-assistant {
            position: absolute;
            top: 10px;
            right: 10px;
            background: #43cea2;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            color: white;
            font-size: 18px;
            display: flex;
            justify-content: center;
            align-items: center;
            cursor: pointer;
        }
        .genai-modal {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
            width: 350px;
        }
        .genai-modal p {
            margin: 0;
            font-size: 14px;
            line-height: 1.5;
            color: #333;
        }
        .genai-modal button {
            background: #185a9d;
            color: white;
            border: none;
            padding: 10px 15px;
            margin-top: 15px;
            border-radius: 4px;
            cursor: pointer;
        }
    </style>
</head>
<body>

<div class="reset-container">
    <h2>Reset Your Password</h2>
    <div class="genai-assistant" id="genaiBtn" title="Ask AI">?</div>
    <form id="resetForm">
        <div class="form-group">
            <label for="newPassword">New Password</label>
            <input type="password" id="newPassword" placeholder="Enter your new password" required>
            <div class="password-info" id="passwordInfo">
                <p>Password should be at least 8 characters long.</p>
                <p>Use a combination of letters, numbers, and symbols.</p>
                <p id="genai-suggestions"></p>
            </div>
            <div class="strength-bar" id="strengthBar">
                <div></div><div></div><div></div><div></div>
            </div>
            <div class="error" id="newPasswordError"></div>
        </div>
        <div class="form-group">
            <label for="confirmPassword">Confirm Password</label>
            <input type="password" id="confirmPassword" placeholder="Re-enter your new password" required>
            <div class="error" id="confirmPasswordError"></div>
        </div>
        <button type="submit">Reset Password</button>
    </form>
</div>

<!-- Generative AI Modal -->
<div class="genai-modal" id="genaiModal">
    <p>ðŸ’¡ **Tips for a Strong Password:**</p>
    <p>- Use at least 8 characters.</p>
    <p>- Include uppercase and lowercase letters.</p>
    <p>- Add numbers and special characters.</p>
    <p>- Avoid using easily guessable information like your name or birthdate.</p>
    <button onclick="closeGenaiModal()">Close</button>
</div>

<script>
    const newPasswordInput = document.getElementById('newPassword');
    const confirmPasswordInput = document.getElementById('confirmPassword');
    const passwordInfo = document.getElementById('passwordInfo');
    const strengthBar = document.getElementById('strengthBar').children;
    const newPasswordError = document.getElementById('newPasswordError');
    const confirmPasswordError = document.getElementById('confirmPasswordError');
    const resetForm = document.getElementById('resetForm');
    const genaiBtn = document.getElementById('genaiBtn');
    const genaiModal = document.getElementById('genaiModal');
    const genaiSuggestions = document.getElementById('genai-suggestions');

    // Password strength check
    newPasswordInput.addEventListener('input', function() {
        const password = newPasswordInput.value;
        let strength = 0;

        // Check the password strength criteria
        if (password.length >= 8) strength++;
        if (/[A-Z]/.test(password)) strength++;
        if (/[0-9]/.test(password)) strength++;
        if (/[^A-Za-z0-9]/.test(password)) strength++;

        // Display strength bar
        for (let i = 0; i < strengthBar.length; i++) {
            strengthBar[i].style.background = i < strength ? getStrengthColor(strength) : '#ddd';
        }

        // Show password criteria and AI suggestions
        passwordInfo.style.display = 'block';
        provideAiSuggestions(password, strength);
    });

    // Display tooltip on focus
    newPasswordInput.addEventListener('focus', function() {
        passwordInfo.style.display = 'block';
    });

    // Hide tooltip on blur
    newPasswordInput.addEventListener('blur', function() {
        passwordInfo.style.display = 'none';
    });

    // Password validation
    resetForm.addEventListener('submit', function(event) {
        event.preventDefault();
        let valid = true;

        newPasswordError.textContent = '';
        confirmPasswordError.textContent = '';

        if (newPasswordInput.value.length < 8) {
            newPasswordError.textContent = 'Password must be at least 8 characters long.';
            valid = false;
        }
        if (newPasswordInput.value !== confirmPasswordInput.value) {
            confirmPasswordError.textContent = 'Passwords do not match.';
            valid = false;
        }

        if (valid) {
            alert('Password successfully reset!');
            // Here, you can add code to handle password reset logic, such as sending data to a server.
        }
    });

    // Function to get strength color
    function getStrengthColor(strength) {
        switch (strength) {
            case 1: return '#e74c3c'; // Weak
            case 2: return '#f39c12'; // Medium
            case 3: return '#f1c40f'; // Good
            case 4: return '#2ecc71'; // Strong
            default: return '#ddd';
        }
    }

    // Provide AI suggestions based on the current password
    function provideAiSuggestions(password, strength) {
        let suggestions = '';

        if (strength < 2) {
            suggestions = 'Try adding uppercase letters, numbers, or symbols to make your password stronger.';
        } else if (strength < 3) {
            suggestions = 'You have a decent password. Consider using a longer phrase for added security.';
        } else if (strength === 3) {
            suggestions = 'Great! Adding a few more characters can make it even stronger.';
        } else {
            suggestions = 'Excellent password! You have a very strong password.';
        }

        genaiSuggestions.textContent = suggestions;
    }

    // Show Generative AI Modal
    genaiBtn.addEventListener('click', function() {
        genaiModal.style.display = 'block';
    });

    // Close Generative AI Modal
    function closeGenaiModal() {
        genaiModal.style.display = 'none';
    }
</script>

</body>
</html>
